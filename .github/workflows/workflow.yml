# This workflow will do a clean installation of node dependencies, cache/restore them, build the source code and run tests across different versions of node
# For more information see: https://docs.github.com/en/actions/automating-builds-and-tests/building-and-testing-nodejs
# Buils infrastructure for a s3 bucket that will contain the static website
name: CI-CD

on:
  push:
    branches: [ "main" ]
  pull_request:
    branches: [ "main" ]

jobs:
  build:
    name: Build angular app
    runs-on: ubuntu-latest

    defaults:
      run:
        working-directory: frontend/page-example
    strategy:
      matrix:
        node-version: [18.x]
    steps:
    - uses: actions/checkout@v3
    - name: Use Node.js ${{ matrix.node-version }}
      uses: actions/setup-node@v3
      with:
        node-version: ${{ matrix.node-version }}
        cache: 'npm'
        cache-dependency-path: frontend/page-example
    - run: npm ci
    - run: npm run build --if-present


    - name: Archive artifact
      uses: actions/upload-artifact@v3
      with:
        name: artifact-frontend
        path: |
          /home/runner/work/aws-workshop-iac-example/aws-workshop-iac-example/frontend/page-example/dist/page-example
        retention-days: 1
        if-no-files-found: error
    # - run: npm test
  deploy:
    name: Cloudformation deploy S3 bucket and sync files
    runs-on: ubuntu-latest
    needs: build
    if: github.ref == 'refs/heads/main'
    steps:
    - name: Checkout
      uses: actions/checkout@v3

    - name: Configure AWS credentials
      id: creds
      uses: aws-actions/configure-aws-credentials@v2
      with:
        aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
        aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
        aws-region: us-east-1

    - name: Deploy S3 bucket with CloudFormation
      id: s3-bucket-static
      uses: aws-actions/aws-cloudformation-github-deploy@v1
      with:
        name: aws-workshop-iac-example-s3-infra
        template: /home/runner/work/aws-workshop-iac-example/aws-workshop-iac-example/cloudformation-templates/static-website.yml
        no-fail-on-empty-changeset: "1"

    - name: Download a single artifact
      uses: actions/download-artifact@v3
      with:
        name: artifact-frontend # this does not make a folder, it gets the files directly here
        path: artifact-frontend # this creates the extra dir
    
    - run: |
          cd artifact-frontend
    - name: Deploy files
      run: aws s3 sync /home/runner/work/aws-workshop-iac-example/aws-workshop-iac-example/artifact-frontend/ s3://${{ steps.s3-bucket-static.outputs.S3BucketName }}

